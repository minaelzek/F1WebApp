openapi: 3.0.3
info:
  title: F1 API
  version: 0.0.1
paths:
  /f1/login/user/:
    post:
      operationId: f1_login_user_create
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginUser'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
        '401':
          description: No response body
  /f1/logout/user/:
    post:
      operationId: f1_logout_user_create
      tags:
      - User
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /f1/register/user/:
    post:
      operationId: f1_register_user_create
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '400':
          description: No response body
  /f1/user/{user_id}:
    get:
      operationId: f1_user_retrieve
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - User
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /f1/user/{user_id}/league/:
    post:
      operationId: f1_user_league_create
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - UserLeague
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLeague'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLeague'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLeague'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLeague'
          description: ''
        '400':
          description: No response body
  /f1/user/{user_id}/league/{league_id}:
    get:
      operationId: f1_user_league_retrieve
      parameters:
      - in: path
        name: league_id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - UserLeague
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: f1_user_league_partial_update
      parameters:
      - in: path
        name: league_id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - UserLeague
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserLeague'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserLeague'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserLeague'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLeague'
          description: ''
        '400':
          description: No response body
    delete:
      operationId: f1_user_league_destroy
      parameters:
      - in: path
        name: league_id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - UserLeague
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /f1/user/{user_id}/league/{league_id}/constructorPrediction/{prediction_id}:
    get:
      operationId: f1_user_league_constructorPrediction_retrieve
      parameters:
      - in: path
        name: league_id
        schema:
          type: integer
        required: true
      - in: path
        name: prediction_id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - Predictions
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstructorPredictionSerlializer'
          description: ''
  /f1/user/{user_id}/leagues/:
    get:
      operationId: f1_user_leagues_retrieve
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - UserLeague
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    ConstructorPredictionSerlializer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Created On
        updated_on:
          type: string
          format: date-time
          readOnly: true
        league:
          type: integer
        user:
          type: integer
        team_1:
          type: integer
        team_2:
          type: integer
        team_3:
          type: integer
      required:
      - created_at
      - id
      - league
      - team_1
      - team_2
      - team_3
      - updated_on
      - user
    LoginUser:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    PatchedUserLeague:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Created On
        updated_on:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 200
        season:
          type: integer
        owner:
          type: integer
        players:
          type: array
          items:
            type: integer
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - id
      - password
      - username
    UserLeague:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Created On
        updated_on:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 200
        season:
          type: integer
        owner:
          type: integer
        players:
          type: array
          items:
            type: integer
      required:
      - created_at
      - id
      - name
      - owner
      - players
      - season
      - updated_on
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
